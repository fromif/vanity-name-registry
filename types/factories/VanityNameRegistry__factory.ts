/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VanityNameRegistry,
  VanityNameRegistryInterface,
} from "../VanityNameRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feePerChar",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_lockPeriod",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_waitBlocks",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lockedAmount",
        type: "uint256",
      },
    ],
    name: "NewRegister",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "NewSignature",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "RenewName",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unlockAmount",
        type: "uint256",
      },
    ],
    name: "UnlockETH",
    type: "event",
  },
  {
    inputs: [],
    name: "feePerChar",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockPeriod",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "records",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "maturity",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "lockAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "registerName",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "cancelPending",
        type: "bool",
      },
    ],
    name: "registerSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "renewName",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "requestSignatures",
    outputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint64",
        name: "blockId",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feePerChar",
        type: "uint256",
      },
    ],
    name: "setFeePerChar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockAmount",
        type: "uint256",
      },
    ],
    name: "setLockAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_lockPeriod",
        type: "uint64",
      },
    ],
    name: "setLockPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_waitBlocks",
        type: "uint64",
      },
    ],
    name: "setWaitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "unlockedEthers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "waitBlocks",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawUnlockedEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001eb538038062001eb58339810160408190526200003491620001f1565b6200003f3362000184565b600180556001600160401b038216620000905760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081c195c9a5bd960921b60448201526064015b60405180910390fd5b60008511620000d35760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b604482015260640162000087565b6001600160a01b0383166200011e5760405162461bcd60e51b815260206004820152601060248201526f696e76616c696420747265617375727960801b604482015260640162000087565b600480546002969096556003949094556001600160e01b0319909416600160a01b6001600160401b03928316026001600160a01b031916176001600160a01b039290921691909117909155600580546001600160401b031916919092161790556200025b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160401b0381168114620001ec57600080fd5b919050565b600080600080600060a0868803121562000209578081fd5b85516020870151604088015191965094506001600160a01b03811681146200022f578182fd5b92506200023f60608701620001d4565b91506200024f60808701620001d4565b90509295509295909350565b611c4a806200026b6000396000f3fe60806040526004361061012a5760003560e01c80637e77ee69116100ab578063ae6db4541161006f578063ae6db454146103a2578063d8df5dc1146103c2578063e5e20ccf146103d8578063f0f44260146103f8578063f2ac940714610418578063f2fde38b1461043857600080fd5b80637e77ee691461031b578063831c92591461033b57806387339cb91461034e5780638da5cb5b14610364578063a96ce7aa1461038257600080fd5b8063541e771d116100f2578063541e771d146102115780635cf47b5a1461029957806361d027b3146102b9578063715018a6146102f15780637d1fb9081461030657600080fd5b80630830602b1461012f57806315a4bd22146101445780632ca37f341461018457806339697f0e146101b25780633fd8b02f146101d2575b600080fd5b61014261013d366004611897565b610458565b005b34801561015057600080fd5b5061017161015f366004611811565b60086020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561019057600080fd5b506101a461019f366004611811565b610964565b60405161017b929190611a13565b3480156101be57600080fd5b506101426101cd36600461183f565b610a11565b3480156101de57600080fd5b506004546101f990600160a01b90046001600160401b031681565b6040516001600160401b03909116815260200161017b565b34801561021d57600080fd5b5061026c61022c3660046118d6565b8051602081830181018051600782529282019190930120915280546001909101546001600160a01b03821691600160a01b90046001600160401b03169083565b604080516001600160a01b0390941684526001600160401b0390921660208401529082015260600161017b565b3480156102a557600080fd5b506101426102b436600461197f565b610ae5565b3480156102c557600080fd5b506004546102d9906001600160a01b031681565b6040516001600160a01b03909116815260200161017b565b3480156102fd57600080fd5b50610142610b55565b34801561031257600080fd5b50610142610b8b565b34801561032757600080fd5b50610142610336366004611997565b610c86565b610142610349366004611897565b610cd3565b34801561035a57600080fd5b5061017160035481565b34801561037057600080fd5b506000546001600160a01b03166102d9565b34801561038e57600080fd5b5061014261039d366004611897565b610f21565b3480156103ae57600080fd5b506101426103bd36600461197f565b6110fe565b3480156103ce57600080fd5b5061017160025481565b3480156103e457600080fd5b506101426103f3366004611997565b61112d565b34801561040457600080fd5b50610142610413366004611811565b6111ce565b34801561042457600080fd5b506005546101f9906001600160401b031681565b34801561044457600080fd5b50610142610453366004611811565b611263565b600260015414156104845760405162461bcd60e51b815260040161047b90611afd565b60405180910390fd5b60026001908155336000908152600660205260409020908101546001600160401b0316158015906104dc5750600554600182015443916104d0916001600160401b039182169116611b4c565b6001600160401b031611155b6105285760405162461bcd60e51b815260206004820152601e60248201527f6e6f2072657175657374206f722077616974206d6f726520626c6f636b730000604482015260640161047b565b8054339061062d90839061053b90611bad565b80601f016020809104026020016040519081016040528092919081815260200182805461056790611bad565b80156105b45780601f10610589576101008083540402835291602001916105b4565b820191906000526020600020905b81548152906001019060200180831161059757829003601f168201915b505050505061062786866040516105cc9291906119e7565b60405180910390206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b906112fe565b6001600160a01b0316146106775760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b604482015260640161047b565b600354600090610688908490611b77565b905060006002548261069a9190611b34565b9050803410156106de5760405162461bcd60e51b815260206004820152600f60248201526e37379032b737bab3b41032ba3432b960891b604482015260640161047b565b6106e88134611b96565b3360009081526008602052604081208054909190610707908490611b34565b90915550508115610787576004546040516000916001600160a01b03169084908381818185875af1925050503d806000811461075f576040519150601f19603f3d011682016040523d82523d6000602084013e610764565b606091505b50509050806107855760405162461bcd60e51b815260040161047b90611a9b565b505b336000908152600660205260408120906107a182826116ff565b50600101805467ffffffffffffffff191690556040516000906007906107ca90889088906119e7565b90815260405190819003602001902080549091506001600160a01b0316156108bc57805442600160a01b9091046001600160401b03161061083b5760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd08195e1c1a5c995960aa1b604482015260640161047b565b600181015481546001600160a01b031660009081526008602052604081208054909190610869908490611b34565b9091555050805460018201546040516001600160a01b03909216917f543060456825697adce6131483b182956f4386967c93ebc28d8e471d2cff390a916108b3918a918a91611a77565b60405180910390a25b80546001600160a01b031916331781556004546108ea906001600160401b03600160a01b9091041642611b4c565b81546001600160401b0391909116600160a01b0267ffffffffffffffff60a01b199091161781556002546001820181905560405133917f207ab716be61ac8d5642c3da4042657b14ce1a04787b1a2d6c76c3d660cda91391610950918a918a9190611a77565b60405180910390a250506001805550505050565b60066020526000908152604090208054819061097f90611bad565b80601f01602080910402602001604051908101604052809291908181526020018280546109ab90611bad565b80156109f85780601f106109cd576101008083540402835291602001916109f8565b820191906000526020600020905b8154815290600101906020018083116109db57829003601f168201915b505050600190930154919250506001600160401b031682565b3360009081526006602052604090208180610a37575060018101546001600160401b0316155b610a795760405162461bcd60e51b81526020600482015260136024820152721a185cc81c195b991a5b99c81c995c5d595cdd606a1b604482015260640161047b565b610a84818585611739565b5060018101805467ffffffffffffffff1916436001600160401b031617905560405133907fb1f45ed63fe6a9b5232f53b165d600c393c9672ac92a4975c350fd7a87ac30fc90610ad790879087906119f7565b60405180910390a250505050565b6000546001600160a01b03163314610b0f5760405162461bcd60e51b815260040161047b90611ac8565b60008111610b505760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b604482015260640161047b565b600255565b6000546001600160a01b03163314610b7f5760405162461bcd60e51b815260040161047b90611ac8565b610b896000611322565b565b60026001541415610bae5760405162461bcd60e51b815260040161047b90611afd565b600260015533600090815260086020526040902054610c035760405162461bcd60e51b81526020600482015260116024820152701b9bc8195d1a195c881d5b9b1bd8dad959607a1b604482015260640161047b565b33600081815260086020526040808220805490839055905190929083908381818185875af1925050503d8060008114610c58576040519150601f19603f3d011682016040523d82523d6000602084013e610c5d565b606091505b5050905080610c7e5760405162461bcd60e51b815260040161047b90611a9b565b505060018055565b6000546001600160a01b03163314610cb05760405162461bcd60e51b815260040161047b90611ac8565b6005805467ffffffffffffffff19166001600160401b0392909216919091179055565b60026001541415610cf65760405162461bcd60e51b815260040161047b90611afd565b6002600155604051600090600790610d1190859085906119e7565b90815260405190819003602001902080549091506001600160a01b03163314610d685760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640161047b565b600354600090610d79908490611b77565b905080341015610dbd5760405162461bcd60e51b815260206004820152600f60248201526e37379032b737bab3b41032ba3432b960891b604482015260640161047b565b610dc78134611b96565b3360009081526008602052604081208054909190610de6908490611b34565b90915550508015610e66576004546040516000916001600160a01b03169083908381818185875af1925050503d8060008114610e3e576040519150601f19603f3d011682016040523d82523d6000602084013e610e43565b606091505b5050905080610e645760405162461bcd60e51b815260040161047b90611a9b565b505b600454825442916001600160401b03600160a01b918290048116929190910481169083161015610ea7578354600160a01b90046001600160401b0316610ea9565b815b610eb39190611b4c565b83546001600160401b0391909116600160a01b0267ffffffffffffffff60a01b1990911617835560405133907fe9ba36322acf3577b441d1324a445132dab6c6cdbef65411e09817fb88ba9cdc90610f0e90889088906119f7565b60405180910390a2505060018055505050565b60026001541415610f445760405162461bcd60e51b815260040161047b90611afd565b6002600155604051600090600790610f5f90859085906119e7565b90815260405190819003602001902080549091506001600160a01b031633148015610f9b5750805442600160a01b9091046001600160401b0316105b610fe75760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f776e6572206f72206e6f74206578706972656400000000604482015260640161047b565b3360009081526008602052604081205460018301546110069190611b34565b33600090815260086020526040808220919091555190915060079061102e90869086906119e7565b90815260405190819003602001812080546001600160e01b031916815560006001909101819055903390839060006040518083038185875af1925050503d8060008114611097576040519150601f19603f3d011682016040523d82523d6000602084013e61109c565b606091505b50509050806110bd5760405162461bcd60e51b815260040161047b90611a9b565b336001600160a01b03167f543060456825697adce6131483b182956f4386967c93ebc28d8e471d2cff390a86868660010154604051610f0e93929190611a77565b6000546001600160a01b031633146111285760405162461bcd60e51b815260040161047b90611ac8565b600355565b6000546001600160a01b031633146111575760405162461bcd60e51b815260040161047b90611ac8565b6000816001600160401b0316116111a15760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081c195c9a5bd960921b604482015260640161047b565b600480546001600160401b03909216600160a01b0267ffffffffffffffff60a01b19909216919091179055565b6000546001600160a01b031633146111f85760405162461bcd60e51b815260040161047b90611ac8565b6001600160a01b0381166112415760405162461bcd60e51b815260206004820152601060248201526f696e76616c696420747265617375727960801b604482015260640161047b565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461128d5760405162461bcd60e51b815260040161047b90611ac8565b6001600160a01b0381166112f25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161047b565b6112fb81611322565b50565b600080600061130d8585611372565b9150915061131a816113e2565b509392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000808251604114156113a95760208301516040840151606085015160001a61139d878285856115e3565b945094505050506113db565b8251604014156113d357602083015160408401516113c88683836116d0565b9350935050506113db565b506000905060025b9250929050565b600081600481111561140457634e487b7160e01b600052602160045260246000fd5b141561140d5750565b600181600481111561142f57634e487b7160e01b600052602160045260246000fd5b141561147d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161047b565b600281600481111561149f57634e487b7160e01b600052602160045260246000fd5b14156114ed5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161047b565b600381600481111561150f57634e487b7160e01b600052602160045260246000fd5b14156115685760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161047b565b600481600481111561158a57634e487b7160e01b600052602160045260246000fd5b14156112fb5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161047b565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561161a57506000905060036116c7565b8460ff16601b1415801561163257508460ff16601c14155b1561164357506000905060046116c7565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611697573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116c0576000600192509250506116c7565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b016116f1878288856115e3565b935093505050935093915050565b50805461170b90611bad565b6000825580601f1061171b575050565b601f0160209004906000526020600020908101906112fb91906117bd565b82805461174590611bad565b90600052602060002090601f01602090048101928261176757600085556117ad565b82601f106117805782800160ff198235161785556117ad565b828001600101855582156117ad579182015b828111156117ad578235825591602001919060010190611792565b506117b99291506117bd565b5090565b5b808211156117b957600081556001016117be565b60008083601f8401126117e3578081fd5b5081356001600160401b038111156117f9578182fd5b6020830191508360208285010111156113db57600080fd5b600060208284031215611822578081fd5b81356001600160a01b0381168114611838578182fd5b9392505050565b600080600060408486031215611853578182fd5b83356001600160401b03811115611868578283fd5b611874868287016117d2565b9094509250506020840135801515811461188c578182fd5b809150509250925092565b600080602083850312156118a9578182fd5b82356001600160401b038111156118be578283fd5b6118ca858286016117d2565b90969095509350505050565b6000602082840312156118e7578081fd5b81356001600160401b03808211156118fd578283fd5b818401915084601f830112611910578283fd5b81358181111561192257611922611bfe565b604051601f8201601f19908116603f0116810190838211818310171561194a5761194a611bfe565b81604052828152876020848701011115611962578586fd5b826020860160208301379182016020019490945295945050505050565b600060208284031215611990578081fd5b5035919050565b6000602082840312156119a8578081fd5b81356001600160401b0381168114611838578182fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8183823760009101908152919050565b602081526000611a0b6020830184866119be565b949350505050565b6040815260008351806040840152815b81811015611a405760208187018101516060868401015201611a23565b81811115611a515782606083860101525b506001600160401b0393909316602083015250601f91909101601f191601606001919050565b604081526000611a8b6040830185876119be565b9050826020830152949350505050565b602080825260139082015272195d1a081d1c985b9cd9995c8819985a5b1959606a1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008219821115611b4757611b47611be8565b500190565b60006001600160401b03808316818516808303821115611b6e57611b6e611be8565b01949350505050565b6000816000190483118215151615611b9157611b91611be8565b500290565b600082821015611ba857611ba8611be8565b500390565b600181811c90821680611bc157607f821691505b60208210811415611be257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122051202e0daf67f5ce4b35e4718f88a1bfaa0b8f58a36f6e616bc7396cb127426164736f6c63430008040033";

export class VanityNameRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _lockAmount: BigNumberish,
    _feePerChar: BigNumberish,
    _treasury: string,
    _lockPeriod: BigNumberish,
    _waitBlocks: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VanityNameRegistry> {
    return super.deploy(
      _lockAmount,
      _feePerChar,
      _treasury,
      _lockPeriod,
      _waitBlocks,
      overrides || {}
    ) as Promise<VanityNameRegistry>;
  }
  getDeployTransaction(
    _lockAmount: BigNumberish,
    _feePerChar: BigNumberish,
    _treasury: string,
    _lockPeriod: BigNumberish,
    _waitBlocks: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _lockAmount,
      _feePerChar,
      _treasury,
      _lockPeriod,
      _waitBlocks,
      overrides || {}
    );
  }
  attach(address: string): VanityNameRegistry {
    return super.attach(address) as VanityNameRegistry;
  }
  connect(signer: Signer): VanityNameRegistry__factory {
    return super.connect(signer) as VanityNameRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VanityNameRegistryInterface {
    return new utils.Interface(_abi) as VanityNameRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VanityNameRegistry {
    return new Contract(address, _abi, signerOrProvider) as VanityNameRegistry;
  }
}
